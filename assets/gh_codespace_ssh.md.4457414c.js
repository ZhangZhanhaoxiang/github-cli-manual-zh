import{_ as s,c as e,o as a,a as c}from"./app.888d8daa.js";const _=JSON.parse('{"title":"gh codespace ssh","description":"","frontmatter":{},"headers":[{"level":2,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"另请参见","slug":"另请参见","link":"#另请参见","children":[]}],"relativePath":"gh_codespace_ssh.md","lastUpdated":1675236702000}'),n={name:"gh_codespace_ssh.md"},t=c(`<h1 id="gh-codespace-ssh" tabindex="-1">gh codespace ssh <a class="header-anchor" href="#gh-codespace-ssh" aria-hidden="true">#</a></h1><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">gh codespace ssh [&lt;flags&gt;...] [-- &lt;ssh-flags&gt;...] [&lt;command&gt;]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>“ssh”命令用于 SSH 连接到代码空间。在最简单的形式中，您可以运行“gh cs ssh”，以交互方式选择代码空间，然后连接。</p><p>默认情况下，“ssh”命令将在 ~/.ssh 目录中创建一对公有/私有密钥来对代码空间进行身份验证。</p><p>“ssh”命令还支持使用“--config”选项与 OpenSSH 进行更深入的集成，该选项以 OpenSSH 格式生成每个代码空间的 ssh 配置。在 ~/.ssh/config 中包含此配置可以改善与 OpenSSH 集成的工具的用户体验，例如 ssh 主机名的 bash/zsh 自动补全、scp/rsync/sshfs 的远程路径补全、git ssh remotes 等。</p><p>一旦设置好了（请参见下面的第二个示例），您就可以像普通远程主机一样 ssh 连接到代码空间（使用“ssh”，而不是“gh cs ssh”）。</p><p>请注意，您要连接的代码空间必须预先安装了 SSH 服务器。如果用于代码空间的 docker 映像没有 SSH 服务器，请将其安装在 Dockerfile 中，或者，对于使用基于 Debian 的映像的代码空间，可以将以下内容添加到 devcontainer.json中：</p><p>&quot;features&quot;: { &quot;<a href="http://ghcr.io/devcontainers/features/sshd:1" target="_blank" rel="noreferrer">ghcr.io/devcontainers/features/sshd:1</a>&quot;: { &quot;version&quot;: &quot;latest&quot; } }</p><h2 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-hidden="true">#</a></h2><p><code>-c</code>, <code>--codespace &lt;string&gt;</code></p><p>代码空间的名称</p><p><code>--config</code></p><p>将 OpenSSH 配置写入标准输出</p><p><code>-d</code>, <code>--debug</code></p><p>将调试数据记录到文件</p><p><code>--debug-file &lt;string&gt;</code></p><p>文件日志的路径</p><p><code>--profile &lt;string&gt;</code></p><p>要使用的 SSH 配置文件的名称</p><p><code>--server-port &lt;int&gt;</code></p><p>SSH 服务器端口号（0 =&gt; 选择空闲的）</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-hidden="true">#</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">$ gh codespace ssh</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">$ gh codespace ssh --config &gt; ~/.ssh/codespaces</span></span>
<span class="line"><span style="color:#A6ACCD;">$ printf &#39;Match all\\nInclude ~/.ssh/codespaces\\n&#39; &gt;&gt; ~/.ssh/config</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="另请参见" tabindex="-1">另请参见 <a class="header-anchor" href="#另请参见" aria-hidden="true">#</a></h2><ul><li><a href="/github-cli-manual-zh/gh_codespace.html">gh codespace</a></li></ul>`,25),p=[t];function o(l,h,d,r,i,g){return a(),e("div",null,p)}const f=s(n,[["render",o]]);export{_ as __pageData,f as default};
