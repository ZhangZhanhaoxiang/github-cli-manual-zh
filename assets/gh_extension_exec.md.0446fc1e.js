import{_ as e,c as a,o as n,a as s}from"./app.001f7d66.js";const x=JSON.parse('{"title":"gh extension exec","description":"","frontmatter":{},"headers":[{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"另请参见","slug":"另请参见","link":"#另请参见","children":[]}],"relativePath":"gh_extension_exec.md","lastUpdated":1675236702000}'),t={name:"gh_extension_exec.md"},l=s(`<h1 id="gh-extension-exec" tabindex="-1">gh extension exec <a class="header-anchor" href="#gh-extension-exec" aria-hidden="true">#</a></h1><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">gh extension exec &lt;name&gt; [args]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>使用短名称执行扩展。例如，如果扩展仓库是“owner/gh-extension”，则应传递“extension”。当短名称与核心 gh 命令冲突时，可以使用此命令。</p><p>扩展名之后的所有参数都将转发给扩展的可执行文件。</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-hidden="true">#</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"># 执行 label 扩展而不是核心 gh label 命令</span></span>
<span class="line"><span style="color:#A6ACCD;">$ gh extension exec label</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="另请参见" tabindex="-1">另请参见 <a class="header-anchor" href="#另请参见" aria-hidden="true">#</a></h2><ul><li><a href="/github-cli-manual-zh/gh_extension.html">gh extension</a></li></ul>`,8),i=[l];function o(c,p,r,h,d,_){return n(),a("div",null,i)}const u=e(t,[["render",o]]);export{x as __pageData,u as default};
