import{_ as t,c as e,o as i,a}from"./app.888d8daa.js";const g=JSON.parse('{"title":"gh mintty","description":"","frontmatter":{},"headers":[{"level":2,"title":"另请参见","slug":"另请参见","link":"#另请参见","children":[]}],"relativePath":"gh_help_mintty.md","lastUpdated":1675236702000}'),n={name:"gh_help_mintty.md"},l=a('<h1 id="gh-mintty" tabindex="-1">gh mintty <a class="header-anchor" href="#gh-mintty" aria-hidden="true">#</a></h1><p>MinTTY是默认情况下 Git for Windows 提供的终端仿真器。它在 gh 提示用户输入方面存在已知问题。</p><p>有一些方法可以让 gh 与 MinTTY 一起工作：</p><ul><li><p>重新安装 Git for Windows，选中“为伪控制台启用实验支持（Enable experimental support for pseudo consoles）”。</p></li><li><p>在 Git for Windows 中使用不同的终端模拟器，如 Windows Terminal。您可以从任何终端仿真器运行“C:\\Program Files\\Git\\bin\\bash.exe”，继续使用 Git For Windows 中的所有工具，而不使用 MinTTY。</p></li><li><p>用 winpty 作为 gh 调用的前缀，例如：“winpty gh auth login”。注意：这可能会导致一些 UI 错误。</p></li></ul><h2 id="另请参见" tabindex="-1">另请参见 <a class="header-anchor" href="#另请参见" aria-hidden="true">#</a></h2><ul><li><a href="/github-cli-manual-zh/gh.html">gh</a></li></ul>',6),r=[l];function h(o,s,_,d,p,c){return i(),e("div",null,r)}const u=t(n,[["render",h]]);export{g as __pageData,u as default};
