import{_ as e,c as s,o as a,a as n}from"./app.888d8daa.js";const A=JSON.parse('{"title":"gh repo clone","description":"","frontmatter":{},"headers":[{"level":2,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":2,"title":"另请参见","slug":"另请参见","link":"#另请参见","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[{"level":3,"title":"用 OWNER/REPO 语法","slug":"用-owner-repo-语法","link":"#用-owner-repo-语法","children":[]},{"level":3,"title":"用其他选项","slug":"用其他选项","link":"#用其他选项","children":[]}]}],"relativePath":"gh_repo_clone.md","lastUpdated":1675236702000}'),l={name:"gh_repo_clone.md"},o=n(`<h1 id="gh-repo-clone" tabindex="-1">gh repo clone <a class="header-anchor" href="#gh-repo-clone" aria-hidden="true">#</a></h1><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">gh repo clone &lt;repository&gt; [&lt;directory&gt;] [-- &lt;gitflags&gt;...]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>在本地克隆 GitHub 仓库。通过在“--”之后列出其他 <code>git clone</code> 标志来传递它们。</p><p>如果省略了“OWNER/REPO”仓库参数的“OWNER/”部分，则默认为认证用户的名称。</p><p>如果仓库是一个 fork，那么它的父仓库将被添加为一个名为“upstream”的额外 git 远程仓库。可以使用 <code>--upstream-remote-name</code> 配置远程仓库名称。<code>--upstream-remote-name</code> 选项支持一个“@owner”值，该值将以父仓库的所有者命名远程仓库。</p><h2 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-hidden="true">#</a></h2><p><code>-u</code>, <code>--upstream-remote-name &lt;string&gt;</code></p><p>克隆 fork 时的上游远程仓库名称</p><h2 id="另请参见" tabindex="-1">另请参见 <a class="header-anchor" href="#另请参见" aria-hidden="true">#</a></h2><ul><li><a href="/github-cli-manual-zh/gh_repo.html">gh repo</a></li></ul><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-hidden="true">#</a></h2><h3 id="用-owner-repo-语法" tabindex="-1">用 OWNER/REPO 语法 <a class="header-anchor" href="#用-owner-repo-语法" aria-hidden="true">#</a></h3><p>您可以使用 OWNER/REPO 语法克隆任意仓库。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"># 克隆一个仓库</span></span>
<span class="line"><span style="color:#A6ACCD;">~/Projects$ gh repo clone cli/cli</span></span>
<span class="line"><span style="color:#A6ACCD;">Cloning into &#39;cli&#39;...</span></span>
<span class="line"><span style="color:#A6ACCD;">~/Projects$ cd cli</span></span>
<span class="line"><span style="color:#A6ACCD;">~/Projects/cli$</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="用其他选项" tabindex="-1">用其他选项 <a class="header-anchor" href="#用其他选项" aria-hidden="true">#</a></h3><p>您也可以用 GitHub URL 来克隆仓库。</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"># 克隆一个仓库</span></span>
<span class="line"><span style="color:#A6ACCD;">~/Projects/my-project$ gh repo clone https://github.com/cli/cli</span></span>
<span class="line"><span style="color:#A6ACCD;">Cloning into &#39;cli&#39;...</span></span>
<span class="line"><span style="color:#A6ACCD;">remote: Enumerating objects: 99, done.</span></span>
<span class="line"><span style="color:#A6ACCD;">remote: Counting objects: 100% (99/99), done.</span></span>
<span class="line"><span style="color:#A6ACCD;">remote: Compressing objects: 100% (76/76), done.</span></span>
<span class="line"><span style="color:#A6ACCD;">remote: Total 21160 (delta 49), reused 35 (delta 18), pack-reused 21061</span></span>
<span class="line"><span style="color:#A6ACCD;">Receiving objects: 100% (21160/21160), 57.93 MiB | 10.82 MiB/s, done.</span></span>
<span class="line"><span style="color:#A6ACCD;">Resolving deltas: 100% (16051/16051), done.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">~/Projects/my-project$</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,17),p=[o];function t(c,r,i,d,h,C){return a(),s("div",null,p)}const u=e(l,[["render",t]]);export{A as __pageData,u as default};
