import{_ as e,c as p,o as a,a as c}from"./app.001f7d66.js";const _=JSON.parse('{"title":"gh repo create","description":"","frontmatter":{},"headers":[{"level":2,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"另请参见","slug":"另请参见","link":"#另请参见","children":[]}],"relativePath":"gh_repo_create.md","lastUpdated":1675236702000}'),o={name:"gh_repo_create.md"},s=c(`<h1 id="gh-repo-create" tabindex="-1">gh repo create <a class="header-anchor" href="#gh-repo-create" aria-hidden="true">#</a></h1><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">gh repo create [&lt;name&gt;] [flags]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>创建新的 GitHub 仓库。</p><p>要以交互方式创建仓库，请使用不带参数的 <code>gh repo create</code>。</p><p>要以非交互方式创建远程仓库，请提供仓库名称和 <code>--public</code>、<code>--private</code> 或 <code>--internal</code> 之一。传递 <code>--clone</code> 以在本地克隆新仓库。</p><p>要从现有本地仓库创建远程仓库，请使用 <code>--source</code> 指定源目录。默认情况下，远程仓库名称将是源目录的名称。传递 <code>--push</code> 将任何本地提交推送到新的仓库。</p><h2 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-hidden="true">#</a></h2><p><code>--add-readme</code></p><p>将 README 文件添加到新仓库</p><p><code>-c</code>, <code>--clone</code></p><p>将新仓库克隆到当前目录</p><p><code>-d</code>, <code>--description &lt;string&gt;</code></p><p>仓库的说明</p><p><code>--disable-issues</code></p><p>在新仓库中禁用议题</p><p><code>--disable-wiki</code></p><p>在新仓库中禁用 wiki</p><p><code>-g</code>, <code>--gitignore &lt;string&gt;</code></p><p>为仓库指定 gitignore 模板</p><p><code>-h</code>, <code>--homepage &lt;URL&gt;</code></p><p>仓库主页网址</p><p><code>--include-all-branches</code></p><p>包括模板仓库中的所有分支</p><p><code>--internal</code></p><p>使新仓库成为内部仓库</p><p><code>-l</code>, <code>--license &lt;string&gt;</code></p><p>为仓库指定开源许可证</p><p><code>--private</code></p><p>将新仓库设为私有</p><p><code>--public</code></p><p>公开新仓库</p><p><code>--push</code></p><p>将本地提交推送到新仓库</p><p><code>-r</code>, <code>--remote &lt;string&gt;</code></p><p>指定新仓库的远程名称</p><p><code>-s</code>, <code>--source &lt;string&gt;</code></p><p>指定要用作源的本地仓库的路径</p><p><code>-t</code>, <code>--team &lt;name&gt;</code></p><p>要授予访问权限的组织团队的名称</p><p><code>-p</code>, <code>--template &lt;repository&gt;</code></p><p>基于模板仓库创建新仓库</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-hidden="true">#</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"># 以交互式创建一个仓库</span></span>
<span class="line"><span style="color:#A6ACCD;">gh repo create</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 创建一个新的远程仓库并把它克隆到本地</span></span>
<span class="line"><span style="color:#A6ACCD;">gh repo create my-project --public --clone</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 从当前目录创建一个远程仓库</span></span>
<span class="line"><span style="color:#A6ACCD;">gh repo create my-project --private --source=. --remote=upstream</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="另请参见" tabindex="-1">另请参见 <a class="header-anchor" href="#另请参见" aria-hidden="true">#</a></h2><ul><li><a href="/github-cli-manual-zh/gh_repo.html">gh repo</a></li></ul>`,45),n=[s];function t(l,d,r,i,h,g){return a(),p("div",null,n)}const C=e(o,[["render",t]]);export{_ as __pageData,C as default};
