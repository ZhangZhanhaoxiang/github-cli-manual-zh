import{_ as e,c as t,o as a,a as n}from"./app.888d8daa.js";const _=JSON.parse('{"title":"gh run list","description":"","frontmatter":{},"headers":[{"level":2,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":2,"title":"从父命令继承的选项","slug":"从父命令继承的选项","link":"#从父命令继承的选项","children":[]},{"level":2,"title":"另请参见","slug":"另请参见","link":"#另请参见","children":[]}],"relativePath":"gh_run_list.md","lastUpdated":1675236702000}'),l={name:"gh_run_list.md"},o=n(`<h1 id="gh-run-list" tabindex="-1">gh run list <a class="header-anchor" href="#gh-run-list" aria-hidden="true">#</a></h1><p>列出当前的 workflow run</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">gh run list [flags]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-hidden="true">#</a></h2><p><code>-b</code>, <code>--branch &lt;string&gt;</code></p><p>按分支筛选 run</p><p><code>-q</code>, <code>--jq &lt;expression&gt;</code></p><p>使用 jq 表达式筛选 JSON 输出</p><p><code>--json &lt;fields&gt;</code></p><p>使用指定字段输出 JSON</p><p><code>-L</code>, <code>--limit &lt;int&gt;</code></p><p>要获取的最大 run 数量</p><p><code>-t</code>, <code>--template &lt;string&gt;</code></p><p>使用 Go 模板格式化 JSON 输出；请参阅“gh help formatting”</p><p><code>-u</code>, <code>--user &lt;string&gt;</code></p><p>按触发 run 的用户筛选 run</p><p><code>-w</code>, <code>--workflow &lt;string&gt;</code></p><p>按 workflow 筛选 run</p><h2 id="从父命令继承的选项" tabindex="-1">从父命令继承的选项 <a class="header-anchor" href="#从父命令继承的选项" aria-hidden="true">#</a></h2><p><code>-R</code>, <code>--repo &lt;[HOST/]OWNER/REPO&gt;</code></p><p>使用 [HOST/]OWNER/REPO 格式选择另一个仓库</p><h2 id="另请参见" tabindex="-1">另请参见 <a class="header-anchor" href="#另请参见" aria-hidden="true">#</a></h2><ul><li><a href="/github-cli-manual-zh/gh_run.html">gh run</a></li></ul>`,23),r=[o];function s(c,d,i,p,h,u){return a(),t("div",null,r)}const f=e(l,[["render",s]]);export{_ as __pageData,f as default};
