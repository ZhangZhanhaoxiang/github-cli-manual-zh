import{_ as a,c as l,o as s,a as e}from"./app.888d8daa.js";const f=JSON.parse('{"title":"gh workflow run","description":"","frontmatter":{},"headers":[{"level":2,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":2,"title":"从父命令继承的选项","slug":"从父命令继承的选项","link":"#从父命令继承的选项","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"另请参见","slug":"另请参见","link":"#另请参见","children":[]}],"relativePath":"gh_workflow_run.md","lastUpdated":1675236702000}'),n={name:"gh_workflow_run.md"},o=e(`<h1 id="gh-workflow-run" tabindex="-1">gh workflow run <a class="header-anchor" href="#gh-workflow-run" aria-hidden="true">#</a></h1><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">gh workflow run [&lt;workflow-id&gt; | &lt;workflow-name&gt;] [flags]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>为给定 workflow 创建 workflow_dispatch 事件。</p><p>此命令将触发 GitHub Actions 以运行给定的 workflow 文件。给定的 workflow 文件必须支持 workflow_dispatch “on”触发器才能以这种方式运行。</p><p>如果 workflow 文件支持输入，可以通过以下几种方式指定输入：</p><ul><li>以交互方式</li><li>通过 -f 或 -f 标志</li><li>作为 JSON，通过 STDIN</li></ul><h2 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-hidden="true">#</a></h2><p><code>-F</code>, <code>--field &lt;key=value&gt;</code></p><p>以 key=value 格式添加字符串参数，遵循 @ 语法</p><p><code>--json</code></p><p>通过 STDIN 将 workflow 输入读取为 JSON</p><p><code>-f</code>, <code>--raw-field &lt;key=value&gt;</code></p><p>以 key=value 格式添加字符串参数</p><p><code>-r</code>, <code>--ref &lt;string&gt;</code></p><p>包含要运行的 workflow 文件版本的分支或标签名称</p><h2 id="从父命令继承的选项" tabindex="-1">从父命令继承的选项 <a class="header-anchor" href="#从父命令继承的选项" aria-hidden="true">#</a></h2><p><code>-R</code>, <code>--repo &lt;[HOST/]OWNER/REPO&gt;</code></p><p>使用 [HOST/]OWNER/REPO 格式选择另一个仓库</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-hidden="true">#</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"># 让 gh 提示您要运行的 workflow 并交互式收集输入</span></span>
<span class="line"><span style="color:#A6ACCD;">$ gh workflow run</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 在远程的默认分支上运行 workflow 文件“triage.yml”</span></span>
<span class="line"><span style="color:#A6ACCD;">$ gh workflow run triage.yml</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 在指定的引用处运行 workflow 文件“triage.yml”</span></span>
<span class="line"><span style="color:#A6ACCD;">$ gh workflow run triage.yml --ref my-branch</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 使用命令行输入并运行 workflow 文件“triage.yml”</span></span>
<span class="line"><span style="color:#A6ACCD;">$ gh workflow run triage.yml -f name=scully -f greeting=hello</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"># 通过标准输入使用 JSON 运行 workflow 文件“triage.yml”</span></span>
<span class="line"><span style="color:#A6ACCD;">$ echo &#39;{&quot;name&quot;:&quot;scully&quot;, &quot;greeting&quot;:&quot;hello&quot;}&#39; | gh workflow run triage.yml --json</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="另请参见" tabindex="-1">另请参见 <a class="header-anchor" href="#另请参见" aria-hidden="true">#</a></h2><ul><li><a href="/github-cli-manual-zh/gh_workflow.html">gh workflow</a></li></ul>`,22),r=[o];function p(t,c,i,d,h,w){return s(),l("div",null,r)}const g=a(n,[["render",p]]);export{f as __pageData,g as default};
